#!/bin/bash

set -ex
set -o pipefail

exec > >(tee /var/log/user_data.log | logger -t user_data) 2>&1
echo BEGIN
BEGINTIME=$(date +%s)
date "+%Y-%m-%d %H:%M:%S"

yum update -y
amazon-install-extras -y epel
yum-config-manager --enable epel*
yum install -y git python3 gcc postgresql-devel python3-devel.x86_64 gtk3 dbus-python-devel.x86_64 libXt.x86_64

pip3 install geopy psycopg2 bs4 torrequest awscli boto3 apache-airflow[celery] selenium
pip3 install pycurl --global-option="--with-openssl"

adduser airflow
AIRFLOW_HOME=/home/airflow
AIRFLOW_ENV="$AIRFLOW_HOME"/airflow.env
AIRFLOW_BIN=/usr/local/bin/airflow

cat << EOT > /etc/tor/torrc
SOCKSPort 9050
ControlPort 9051
CookieAuthentication 1
EOT

mkdir "$AIRFLOW_HOME"/.browsing
echo "TOR_PASSWORD=$TOR_PASSWORD" >> "$AIRFLOW_ENV"
echo "HashedControlPassword $(tor --hash-password "$TOR_PASSWORD" | grep --color=never 16:[A-Z0-9])" >> /etc/tor/torrc
systemctl restart tor

wget https://download-installer.cdn.mozilla.net/pub/firefox/releases/76.0.1/linux-x86_64/en-US/firefox-76.0.1.tar.bz2
tar xvf firefox-76.0.1.tar.bz2
mv firefox/ opt/
ln -s /opt/firefox/firefox /usr/bin/firefox

wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
tar -xzvf geckodriver-v0.26.0-linux64.tar.gz
mv geckodriver "$AIRFLOW_HOME"/.browsing/

cat << EOF > "$AIRFLOW_HOME"/airflow.cfg
${airflow_config}
EOF

cat << EOF > /etc/systemd/system/airflow-worker.service
${worker_service}
EOF

cat << EOF > "$AIRFLOW_ENV"
AIRFLOW_HOME="$AIRFLOW_HOME"
AIRFLOW_CONFIG="$AIRFLOW_HOME"/airflow.cfg
EOF

mkdir "$AIRFLOW_HOME"/.aws
cat << EOT > "$AIRFLOW_HOME"/.aws/config
[default]
region = us-east-1
output = json
EOT

mkdir "$AIRFLOW_HOME"/logs
mkdir "$AIRFLOW_HOME"/dags

git clone https://github.com/jschnab/real-estate-scraping.git
cp real-estate-scraping/airflow_dag.py "$AIRFLOW_HOME"/dags/
mv real-estate-scraping "$AIRFLOW_HOME"/real-estate-scraping
aws s3 cp --recursive s3://real-estate-browsing/config "$AIRFLOW_HOME"/.browsing

chown -R airflow:airflow "$AIRFLOW_HOME"

systemctl enable airflow-worker
systemctl start airflow-worker

date "+%Y-%m-%d %H:%M:%S"
ENDTIME=$(date +%s)
echo "deployment took $((ENDTIME - BEGINTIME)) seconds"
echo END
